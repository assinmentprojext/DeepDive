3. 자바 스크립트 개발 환경과 실행 방법
1) 자바스크립트 실행 환경
    모든 브라우저 & node.js -> 자바스크립트 엔진 탑재

        브라우저 = html,css, js => 렌더링
        node.js = 브라우저 외부에서 자바스크립트 실행

        브라우저, nodejs 둘다 ecmascript를 실행할 수 있지만 ecma외의 추가 기능 호환x

        e.g., 브라우저는 html요소를 선택&조작하는 기능인 dom api를 기본적으로 제공하지반 브라우저 외부에서 js를 개발하는 것이 주 목적인
        nodejs는 dom api를 제공하지 않는다 
        왜냐하면, 브라우저 외부환경에서는 html요소를 피싱해서 객체화한 dom을 직접 다룰 필요가 없다

        웹 크롤링
            서버에서 웹사이트의 콘텐츠를 수집하기 위해 웹사이트에서 html문서를 가져온 다음, 이를 가공해서 필요한 데이터만 추출하는 경우가 있다. 
            이를 웹 크롤링이라고 한다
                서버 환경은 dom api를 제공하지 않는다
                cheerio와 같은 dom 라이브러리를 사용해 html문서 가공

    반대로 node.js에서는 파일을 수정하고 생성할 수 있는 시스템을 기본제공하지만. 브라우저는 이를 지원하지 않는다 
        Wep Api인 file Reader객체를 통해 사용자가 지정한 파일을 읽어들이는 것은 가능하다
    
    브라우저는 ecmascript, domm canvas 같은 클라이언트 사이드 web api를 지원

    node.js는 클라이언트 사이트 web api 를 지원하지 않고 ecmascript와 node.js 고유의 api 지우ㅓㄴ

    2) 웹브라우저

    크롬의 v8엔진은 node,js에서도 사용

    2)-1 개발자 도구
    웹 애플리케이션 개발의 필수적
    브라우저에 기본 내장 (단축키)
    
    2)-2  콘솔

    구현 단계에서 디버깅을 실행하는 것보다 간편하게 코드의 실행 결과를 확인하면서 개발을 진행하기 위해 콘솔 메서드를 사용하는 경우가 많음

    콘솔은 자바스크립트 코드를 직접 입력해 그 결과를 확인할 수 있는 repl(입력-> 수항 -> 출력 -> 반복)환경으로 사용할 수도 있다 

    2) -3 브라우저에서 자바스크립트 실행

    브라우저는 html 파이을 로드하면 script 태그에 포함된 자바스크립트 코드를 실행한다. 만약 자바스크립트 코드 내에서 console.log 매서드가 호출 되어 있다면 콘솔에 실행 결과가 수
    행 될 것이다